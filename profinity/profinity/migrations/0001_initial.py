# Generated by Django 5.0 on 2023-12-16 23:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('number_of_employees', models.IntegerField()),
                ('number_of_projects', models.IntegerField()),
                ('projects', models.CharField(max_length=50)),
                ('number_of_completed_projects', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='Milestones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('budget', models.FloatField()),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('budget', models.FloatField()),
                ('status', models.CharField(max_length=50)),
                ('number_of_employees', models.IntegerField()),
                ('number_of_tasks', models.IntegerField()),
                ('number_of_completed_tasks', models.IntegerField()),
                ('documents', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='profinity.document')),
                ('milestones', models.ManyToManyField(blank=True, to='profinity.milestones')),
                ('tasks', models.ManyToManyField(blank=True, to='profinity.task')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.IntegerField()),
                ('address', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='profile_image/')),
                ('date_of_birth', models.DateField()),
                ('department', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=50)),
                ('experience', models.IntegerField()),
                ('salary', models.FloatField()),
                ('propoints', models.IntegerField()),
                ('Employment_Status', models.CharField(max_length=50)),
                ('Skills_and_Qualifications', models.CharField(max_length=50)),
                ('Performance_Ratings', models.FloatField()),
                ('ROI', models.FloatField()),
                ('assigned_tasks', models.ManyToManyField(blank=True, to='profinity.task')),
                ('milestones_passed', models.ManyToManyField(blank=True, to='profinity.milestones')),
            ],
            bases=('profinity.user',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.IntegerField()),
                ('address', models.CharField(max_length=50)),
                ('resume', models.FileField(upload_to='resume/')),
                ('image', models.ImageField(blank=True, upload_to='profile_image/')),
                ('date_of_birth', models.DateField()),
                ('department', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=50)),
                ('experience', models.IntegerField()),
                ('salary', models.FloatField()),
                ('propoints', models.IntegerField()),
                ('Employment_Status', models.CharField(max_length=50)),
                ('Work_Schedule', models.CharField(max_length=50)),
                ('Skills_and_Qualifications', models.CharField(max_length=50)),
                ('Performance_Ratings', models.FloatField()),
                ('ROI', models.FloatField()),
                ('assigned_tasks', models.ManyToManyField(blank=True, to='profinity.task')),
                ('milestones_passed', models.ManyToManyField(blank=True, to='profinity.milestones')),
            ],
            bases=('profinity.user',),
        ),
    ]
